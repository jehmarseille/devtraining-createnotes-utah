<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function(spModal,$scope, spUtil) {
  /* widget controller */
  var c = this;
	
	c.notePos = 0;
	 c.selectItem = function(idx) {
		c.notePos = idx;
    var id = c.data.notes[idx].sys_id;
	
    $rootScope.noteID = id;
    $rootScope.$emit('selectNote', id);
  }
	
	$rootScope.$on('updateTitle', function(event,data) {
		c.data.notes[c.notePos].title = data.title;
		c.data.notes[c.notePos].note = data.note;
		});

	c.newNote = function(){
		c.server.get({
			action:"newNote"	
		}).then(function(r){
			c.data.notes.unshift(r.data.newNote);
			c.data.noteID = r.data.noteID;
		})
	}
	
	$rootScope.$on('deletedNote', function(event, data){
		c.data.notes.splice(c.notePos, 1);
	})
	
	
	// Record removed from data object on the client and passed to server
  c.snNoteUpdate = function(name,sysID){

    for (var i=0;i<c.data.notes.length;i++){
      if(c.data.notes[i].sys_id == name.data.sys_id){
        if(name.data.record.note){
          c.data.notes[i].note = name.data.record.note.display_value;
        }
        if(name.data.record.title){
          c.data.notes[i].title = name.data.record.title.display_value;
        }
        c.server.update();

      }
    }
  }

  // Record removed from data object on the server and passed back to client
  c.snNoteDelete = function(sysID){

    c.server.get({
      action: 'snDeleteNote',
      noteID: sysID

    }).then(function(r){
      c.data.notes = r.data.notes;
    });

  }
	
	
	
	spUtil.recordWatch($scope, "x_snc_createnotes_note", "userDYNAMIC90d1921e5f510100a9ad2572f2b477fe", function(name){
		console.log(name);
		if(name.data.operation == "insert"){
    c.server.refresh();
  }
		if(name.data.operation == "update"){
    c.snNoteUpdate(name, name.data.sys_id);
  }
	if(name.data.operation == "delete"){
    c.snNoteDelete(name.data.sys_id);
  }
	})

};]]></client_script>
        <controller_as>c</controller_as>
        <css>       .search{
       display:flex;
         padding-left: 10px;
       align-items: center;
       }

.search input{
border:none;
}
.search input:focus{
box-shadow:none;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes List</name>
        <option_schema>[{"hint":"Specify a title for the Notes List widget","name":"title","section":"other","default_value":"Notes","label":"Title","type":"string"},{"hint":"Select the maximum number of records to display","name":"maximum_records_to_display","section":"other","default_value":"5","label":"Maximum records to display","type":"choice","choices":[{"label":"2","value":"2"},{"label":"3","value":"3"},{"label":"5","value":"5"},{"label":"7","value":"7"},{"label":"11","value":"11"},{"label":"13","value":"13"},{"label":"17","value":"17"}]}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	//create an array to populate with notes
	data.notes = [];
	var noteGR = new GlideRecord('x_snc_createnotes_note');
	noteGR.addQuery('user', gs.getUser().getID());
	noteGR.orderByDesc('sys_created_on');
	noteGR.setLimit(options.maximum_records_to_display)
	noteGR.query();

	while (noteGR.next()) {
		var noteObj = {};
		//use service portal helper method to get some display values
		$sp.getRecordDisplayValues(noteObj, noteGR, 'number,title,sys_id');
		//get the first 20 characters of the description
		noteObj.note = noteGR.getValue('note').slice(0,20);
		//push the populated obj into the array
		data.notes.push(noteObj);
	}
	
	if(input && input.action == "newNote"){
		var newNote = new GlideRecord('x_snc_createnotes_note');
		newNote.newRecord();
		var id = newNote.insert();
		data.noteID = id;
		data.newNote = {};
		$sp.getRecordValues(data.newNote, newNote, 'title,note,sys_id');
		
	}
	
}

)();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-03-30 03:44:20</sys_created_on>
        <sys_id>9e8f65cf97352110a8af9300f153aff6</sys_id>
        <sys_mod_count>144</sys_mod_count>
        <sys_name>Notes List</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_9e8f65cf97352110a8af9300f153aff6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-13 04:33:30</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading clearfix">
    <h3 class="panel-title pull-left">
      {{::c.options.title}}
    </h3>
    <button ng-click="c.newNote()" type="button" class="btn btn-primary pull-right" data-toggle="tooltip" data-placement="bottom" title="Add new note">
     <span class="glyphicon glyphicon-plus"></span>
    </button>
  </div>
  <div class="search">
    <span class="glyphicon glyphicon-search"></span>
    <input type="text" placeholder="Filter" class="form-control" ng-model="filterNote">
  </div>
  <div class="list-group">
    <a class="list-group-item" ng-click="c.selectItem($index)" ng-repeat="note in data.notes | filter: filterNote">
      <h4 class="list-group-item-heading">
        {{note.title}}
      </h4>
      <p class="list-group-item-text">
        {{note.note}}
      </p>
    </a>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
